<?php
class ControllerMaterialLookup extends Controller {

	private $error = array();

 	public function index(){
		$this->load->model('material/lookup');
		$this->getList();
 	}

 	public function insert_tmp(){
   	$this->load->language('material/lookup');
   	$this->document->title = $this->language->get('heading_title');
		$this->load->model('material/lookup');
   	if(($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()){
			$this->model_material_lookup->addPackage($this->request->post);
			$this->session->data['success'] = $this->language->get('text_success');
			$url = '';
			if (isset($this->request->get['filter_name'])){
				$url .= '&filter_name=' . $this->request->get['filter_name'];
			}
			if (isset($this->request->get['filter_model'])){
				$url .= '&filter_model=' . $this->request->get['filter_model'];
			}
			if (isset($this->request->get['filter_price'])){
				$url .= '&filter_price=' . $this->request->get['filter_price'];
			}
			if (isset($this->request->get['filter_quantity'])) {
				$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
			}
			if (isset($this->request->get['filter_status'])) {
				$url .= '&filter_status=' . $this->request->get['filter_status'];
			}
			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}
			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}
			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}
			$this->redirect(HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url);
    	}
    	$this->getForm();
 	}

 	public function update_tmp() {
    	$this->load->language('material/lookup');

    	$this->document->title = $this->language->get('heading_title');

		$this->load->model('material/lookup');

    	if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {
			$this->model_material_lookup->editPackage($this->request->get['id'], $this->request->post);

			$this->session->data['success'] = $this->language->get('text_success');

			$url = '';

			if (isset($this->request->get['filter_name'])) {
				$url .= '&filter_name=' . $this->request->get['filter_name'];
			}

			if (isset($this->request->get['filter_model'])) {
				$url .= '&filter_model=' . $this->request->get['filter_model'];
			}

			if (isset($this->request->get['filter_price'])) {
				$url .= '&filter_price=' . $this->request->get['filter_price'];
			}

			if (isset($this->request->get['filter_quantity'])) {
				$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
			}

			if (isset($this->request->get['filter_status'])) {
				$url .= '&filter_status=' . $this->request->get['filter_status'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			$this->redirect(HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url);
		}

    	$this->getForm();
  	}

 	public function delete() {
   	$this->load->language('material/lookup');
   	$this->document->title = $this->language->get('heading_title');
		$this->load->model('material/lookup');

		if (isset($this->request->post['selected']) && $this->validateDelete()) {
			foreach ($this->request->post['selected'] as $id) {
				$this->model_material_lookup->deletePackage($id);
  		}

			$this->session->data['success'] = $this->language->get('text_success');

			$url = '';

			if (isset($this->request->get['filter_name'])) {
				$url .= '&filter_name=' . $this->request->get['filter_name'];
			}

			if (isset($this->request->get['filter_model'])) {
				$url .= '&filter_model=' . $this->request->get['filter_model'];
			}

			if (isset($this->request->get['filter_price'])) {
				$url .= '&filter_price=' . $this->request->get['filter_price'];
			}

			if (isset($this->request->get['filter_quantity'])) {
				$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
			}

			if (isset($this->request->get['filter_status'])) {
				$url .= '&filter_status=' . $this->request->get['filter_status'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			$this->redirect(HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url);
		}

   	$this->getList();
 	}

 	public function copy() {
   	$this->load->language('material/lookup');
   	$this->document->title = $this->language->get('heading_title');
		$this->load->model('material/lookup');

		if (isset($this->request->post['selected']) && $this->validateCopy()) {
			foreach ($this->request->post['selected'] as $id) {
				$this->model_material_lookup->copyPackage($id);
	  		}

			$this->session->data['success'] = $this->language->get('text_success');

			$url = '';

			if (isset($this->request->get['filter_name'])) {
				$url .= '&filter_name=' . $this->request->get['filter_name'];
			}

			if (isset($this->request->get['filter_model'])) {
				$url .= '&filter_model=' . $this->request->get['filter_model'];
			}

			if (isset($this->request->get['filter_price'])) {
				$url .= '&filter_price=' . $this->request->get['filter_price'];
			}

			if (isset($this->request->get['filter_quantity'])) {
				$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
			}

			if (isset($this->request->get['filter_status'])) {
				$url .= '&filter_status=' . $this->request->get['filter_status'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			$this->redirect(HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url);
		}

    	$this->getList();
 	}

 	private function getList(){
 		isset($this->error['warning']) ? $this->data['error_warning'] = $this->error['warning'] : $this->data['error_warning'] = '';
		isset($this->session->data['success']) ? $this->data['success'] = $this->session->data['success'] : $this->data['success'] = '';
		unset($this->session->data['success']);
		
    //$this->log->aPrint( 'start getList()' );
    $page   = $this->util->parseRequest('page','get','1');
    $sort   = $this->util->parseRequest('sort','get','name');
    $order  = $this->util->parseRequest('order','get','ASC');
    $filter_name      = $this->util->parseRequest('filter_name','get');
    $filter_cat       = $this->util->parseRequest('filter_cat','get');
    $filter_price     = $this->util->parseRequest('filter_price','get');
    $filter_quantity  = $this->util->parseRequest('filter_quantity','get');
    $filter_thres  = $this->util->parseRequest('filter_thres','get');
    $filter_status    = $this->util->parseRequest('filter_status','get','1');
    
		$url = '';
		if($page) $url.='&page='.$page;
		if($sort) $url.='&sort='.$sort;
		if($order) $url.='&order='.$order;
		if($filter_name) $url.='&filter_name='.$filter_name;
		if($filter_cat)  $url.='&filter_cat='.$filter_cat;
		if($filter_price) $url.='&filter_price='.$filter_price;
		if($filter_quantity) $url.='&filter_quantity='.$filter_quantity;
		if($filter_thres) $url.='&filter_thres='.$filter_thres;
		if($filter_status) $url.='&filter_status='.$filter_status;
    //echo 'url : ' . $url; 

		$this->data['heading_title'] = 'Material - Package';
		$this->data['text_enabled'] = $this->language->get('text_enabled');
		$this->data['text_disabled'] = $this->language->get('text_disabled');
		$this->data['text_no_results'] = $this->language->get('text_no_results');
		$this->data['text_image_manager'] = $this->language->get('text_image_manager');

 		$this->document->breadcrumbs = array();
 		$this->document->breadcrumbs[] = array(
   		'href'      => HTTPS_SERVER . 'index.php?route=common/home&token=' . $this->session->data['token'],
      'text'      => $this->language->get('text_home'),
      'separator' => FALSE
   	);
 		$this->document->breadcrumbs[] = array(
      'href'      => HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url,
      'text'      => 'Material - Package',
      'separator' => ' :: '
   	);

		$this->data['insert'] = HTTPS_SERVER . 'index.php?route=material/lookup/insert&token=' . $this->session->data['token'] . $url;
		$this->data['copy'] = HTTPS_SERVER . 'index.php?route=material/lookup/copy&token=' . $this->session->data['token'] . $url;
		$this->data['delete'] = HTTPS_SERVER . 'index.php?route=material/lookup/delete&token=' . $this->session->data['token'] . $url;


		$this->data['packages'] = array();
		$data = array(
			'filter_name'	    => $filter_name,
			'filter_cat'	    => $filter_cat,
			'filter_price'	  => $filter_price,
			'filter_quantity' => $filter_quantity,
			'filter_thres' => $filter_thres,
			'filter_status'   => $filter_status,
			'sort'            => $sort,
			'order'           => $order,
			'start'           => ($page - 1) * $this->config->get('config_admin_limit'),
			'limit'           => $this->config->get('config_admin_limit')
		);

		$this->load->model('tool/image');
		$package_total = $this->model_material_lookup->getTotalPackages($data);
		$results = $this->model_material_lookup->getPackages($data);
		//$this->log->aPrint( $results );
		foreach ($results as $result) {
			$action = array();
			$action[] = array(
				'text' => $this->language->get('text_edit'),
				'href' => HTTPS_SERVER . 'index.php?route=material/lookup/update&token=' . $this->session->data['token'] . '&id=' . $result['id'] . $url
			);
			if($result['image'] && file_exists(DIR_IMAGE . $result['image'])){
				$image = $this->model_tool_image->resize($result['image'], 60, 60);
			}else{
				$image = $this->model_tool_image->resize('no_image.jpg', 60, 60);
			}
      $this->data['packages'][] = array(
			  'id' => $result['id'],
			  'name'       => $result['name'],
			  'cat'        => $result['cat'],
			  'price'      => $result['price'],
			  'image'      => $image,
			  'quantity'   => $result['quantity'],
			  'thres'      => $result['thres'],
			  'status'     => ($result['status'] ? 'IN USE' : 'Unuse'),
			  'selected'   => isset($this->request->post['selected']) && in_array($result['id'], $this->request->post['selected']),
			  'action'     => $action
		  );
    }

		$this->data['button_copy'] = $this->language->get('button_copy');
		$this->data['button_insert'] = $this->language->get('button_insert');
		$this->data['button_delete'] = $this->language->get('button_delete');
		$this->data['button_filter'] = $this->language->get('button_filter');
 		$this->data['token'] = $this->session->data['token'];

		$this->data['sort_name'] = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . '&sort=pd.name' . $url;
		$this->data['sort_price'] = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . '&sort=p.price' . $url;
		$this->data['sort_quantity'] = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . '&sort=p.quantity' . $url;
		$this->data['sort_status'] = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . '&sort=p.status' . $url;
		$this->data['sort_order'] = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . '&sort=p.sort_order' . $url;

		$pagination = new Pagination();
		$pagination->total = $package_total;
		$pagination->page = $page;
		$pagination->limit = $this->config->get('config_admin_limit');
		$pagination->text = $this->language->get('text_pagination');
		$pagination->url = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url . '&page={page}';

		$this->data['pagination'] = $pagination->render();

		$this->data['filter_name'] = $filter_name;
		$this->data['filter_cat'] = $filter_cat;
		$this->data['filter_price'] = $filter_price;
		$this->data['filter_quantity'] = $filter_quantity;
		$this->data['filter_thres'] = $filter_thres;
		$this->data['filter_status'] = $filter_status;

		$this->data['sort'] = $sort;
		$this->data['order'] = $order;

		$this->template = 'material/lookup.tpl';
		$this->children = array(
			'common/header',
			'common/footer'
		);

		$this->response->setOutput($this->render(TRUE), $this->config->get('config_compression'));
  }



  // ajax call for callQuickUpdate
  public function callQuickUpdate(){
    $id = $this->request->get['id'];
    $quantity = $this->request->get['quantity'];

		$this->load->model('material/lookup');
    $this->model_material_lookup->callQuickUpdate($id,$quantity);
  }



  // ajax call for update pannel
  public function callUpdatePannel(){
    $ddl = $this->request->get['ddl'];

    if('insert' == $ddl){
      $this->data['action'] = HTTPS_SERVER . 'index.php?route=material/lookup/insert&token=' . $this->session->data['token'];
    }else{
  	  $id = $this->request->get['id'];
  		$this->load->model('material/lookup');
      $this->data['data'] = $this->model_material_lookup->getOneData($id);
      $this->data['token'] = $this->session->data['token'];
      $this->data['action'] = HTTPS_SERVER . 'index.php?route=material/lookup/update&token=' . $this->session->data['token'];
    }
    $this->data['ddl'] = $ddl;

    $this->template = 'material/updatePannel.tpl';
  	$this->response->setOutput($this->render(TRUE), $this->config->get('config_compression'));
  }

  public function insert(){
    //$this->log->aPrint( $this->request );
  	$this->load->model('material/lookup');
    if($this->model_material_lookup->insertPackage($this->request->post)){
      $this->getList();
    }else{
      echo "<script>alert('update fail');</script>";
    }
  }

  public function update(){
    //$this->log->aPrint( $this->request );  	exit;
  	$this->load->model('material/lookup');
    if($this->model_material_lookup->updatePackage($this->request->post)){
      $this->getList();
    }else{
      echo "<script>alert('update fail');</script>";
    }
  }

  //------------------------------------------------------------
  
 	private function getForm() {
    	$this->data['heading_title'] = $this->language->get('heading_title');

    	$this->data['text_enabled'] = $this->language->get('text_enabled');
    	$this->data['text_disabled'] = $this->language->get('text_disabled');
    	$this->data['text_none'] = $this->language->get('text_none');
    	$this->data['text_yes'] = $this->language->get('text_yes');
    	$this->data['text_no'] = $this->language->get('text_no');
		$this->data['text_plus'] = $this->language->get('text_plus');
		$this->data['text_minus'] = $this->language->get('text_minus');
		$this->data['text_default'] = $this->language->get('text_default');
		$this->data['text_image_manager'] = $this->language->get('text_image_manager');
		$this->data['text_option'] = $this->language->get('text_option');
		$this->data['text_option_value'] = $this->language->get('text_option_value');
		$this->data['text_select'] = $this->language->get('text_select');
		$this->data['text_none'] = $this->language->get('text_none');

		$this->data['tab_shipping'] = $this->language->get('tab_shipping');
		$this->data['tab_links'] = $this->language->get('tab_links');

		$this->data['entry_name'] = $this->language->get('entry_name');
		$this->data['entry_meta_keywords'] = $this->language->get('entry_meta_keywords');
		$this->data['entry_meta_description'] = $this->language->get('entry_meta_description');
		$this->data['entry_description'] = $this->language->get('entry_description');
		$this->data['entry_store'] = $this->language->get('entry_store');
		$this->data['entry_keyword'] = $this->language->get('entry_keyword');
		$this->data['entry_sku'] = $this->language->get('entry_sku');
		$this->data['entry_location'] = $this->language->get('entry_location');
		$this->data['entry_minimum'] = $this->language->get('entry_minimum');
		$this->data['entry_manufacturer'] = $this->language->get('entry_manufacturer');
    	$this->data['entry_shipping'] = $this->language->get('entry_shipping');
    	$this->data['entry_date_available'] = $this->language->get('entry_date_available');
    	$this->data['entry_quantity'] = $this->language->get('entry_quantity');
		$this->data['entry_stock_status'] = $this->language->get('entry_stock_status');
    	$this->data['entry_status'] = $this->language->get('entry_status');
    	$this->data['entry_tax_class'] = $this->language->get('entry_tax_class');
    	$this->data['entry_price'] = $this->language->get('entry_price');
		$this->data['entry_cost'] = $this->language->get('entry_cost');
		$this->data['entry_subtract'] = $this->language->get('entry_subtract');
    	$this->data['entry_weight_class'] = $this->language->get('entry_weight_class');
    	$this->data['entry_weight'] = $this->language->get('entry_weight');
		$this->data['entry_dimension'] = $this->language->get('entry_dimension');
		$this->data['entry_length'] = $this->language->get('entry_length');
    	$this->data['entry_image'] = $this->language->get('entry_image');
    	$this->data['entry_download'] = $this->language->get('entry_download');
    	$this->data['entry_category'] = $this->language->get('entry_category');
		$this->data['entry_related'] = $this->language->get('entry_related');
		$this->data['entry_option'] = $this->language->get('entry_option');
		$this->data['entry_option_value'] = $this->language->get('entry_option_value');
		$this->data['entry_sort_order'] = $this->language->get('entry_sort_order');
		$this->data['entry_prefix'] = $this->language->get('entry_prefix');
		$this->data['entry_customer_group'] = $this->language->get('entry_customer_group');
		$this->data['entry_date_start'] = $this->language->get('entry_date_start');
		$this->data['entry_date_end'] = $this->language->get('entry_date_end');
		$this->data['entry_priority'] = $this->language->get('entry_priority');
		$this->data['entry_tags'] = $this->language->get('entry_tags');

    	$this->data['button_save'] = $this->language->get('button_save');
    	$this->data['button_cancel'] = $this->language->get('button_cancel');
		$this->data['button_add_option'] = $this->language->get('button_add_option');
		$this->data['button_add_option_value'] = $this->language->get('button_add_option_value');
		$this->data['button_add_discount'] = $this->language->get('button_add_discount');
		$this->data['button_add_image'] = $this->language->get('button_add_image');
		$this->data['button_remove'] = $this->language->get('button_remove');

    	$this->data['tab_general'] = $this->language->get('tab_general');
    	$this->data['tab_data'] = $this->language->get('tab_data');
		$this->data['tab_discount'] = $this->language->get('tab_discount');
		$this->data['tab_option'] = $this->language->get('tab_option');
    	$this->data['tab_image'] = $this->language->get('tab_image');

 		if (isset($this->error['warning'])) {
			$this->data['error_warning'] = $this->error['warning'];

			$this->data['error_warning'] = '';
		}

 		if (isset($this->error['name'])) {
			$this->data['error_name'] = $this->error['name'];

			$this->data['error_name'] = '';
		}

 		if (isset($this->error['meta_description'])) {
			$this->data['error_meta_description'] = $this->error['meta_description'];

			$this->data['error_meta_description'] = '';
		}

   		if (isset($this->error['description'])) {
			$this->data['error_description'] = $this->error['description'];

			$this->data['error_description'] = '';
		}

   		if (isset($this->error['model'])) {
			$this->data['error_model'] = $this->error['model'];

			$this->data['error_model'] = '';
		}

		if (isset($this->error['date_available'])) {
			$this->data['error_date_available'] = $this->error['date_available'];

			$this->data['error_date_available'] = '';
		}

		$url = '';

		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . $this->request->get['filter_name'];
		}

		if (isset($this->request->get['filter_model'])) {
			$url .= '&filter_model=' . $this->request->get['filter_model'];
		}

		if (isset($this->request->get['filter_price'])) {
			$url .= '&filter_price=' . $this->request->get['filter_price'];
		}

		if (isset($this->request->get['filter_quantity'])) {
			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
		}

		if (isset($this->request->get['filter_status'])) {
			$url .= '&filter_status=' . $this->request->get['filter_status'];
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}

  		$this->document->breadcrumbs = array();

   		$this->document->breadcrumbs[] = array(
       		'href'      => HTTPS_SERVER . 'index.php?route=common/home&token=' . $this->session->data['token'],
       		'text'      => $this->language->get('text_home'),
			'separator' => FALSE
   		);

   		$this->document->breadcrumbs[] = array(
       		'href'      => HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url,
       		'text'      => $this->language->get('heading_title'),
      		'separator' => ' :: '
   		);

		if (!isset($this->request->get['id'])) {
			$this->data['action'] = HTTPS_SERVER . 'index.php?route=material/lookup/insert&token=' . $this->session->data['token'] . $url;

			$this->data['action'] = HTTPS_SERVER . 'index.php?route=material/lookup/update&token=' . $this->session->data['token'] . '&id=' . $this->request->get['id'] . $url;
		}

		$this->data['cancel'] = HTTPS_SERVER . 'index.php?route=material/lookup&token=' . $this->session->data['token'] . $url;

		$this->data['token'] = $this->session->data['token'];

		if (isset($this->request->get['id']) && ($this->request->server['REQUEST_METHOD'] != 'POST')) {
      		$package_info = $this->model_material_lookup->getPackage($this->request->get['id']);
    	}

		$this->load->model('localisation/language');

		$this->data['languages'] = $this->model_localisation_language->getLanguages();

		if (isset($this->request->post['package_description'])) {
			$this->data['package_description'] = $this->request->post['package_description'];
		} elseif (isset($package_info)) {
			$this->data['package_description'] = $this->model_material_lookup->getPackageDescriptions($this->request->get['id']);
		}else{
			$this->data['package_description'] = array();
		}

		if (isset($this->request->post['model'])) {
      		$this->data['model'] = $this->request->post['model'];
    	} elseif (isset($package_info)) {
			$this->data['model'] = $package_info['model'];
		}else{
      		$this->data['model'] = '';
    	}

		if (isset($this->request->post['sku'])) {
      		$this->data['sku'] = $this->request->post['sku'];
    	} elseif (isset($package_info)) {
			$this->data['sku'] = $package_info['sku'];
		}else{
      		$this->data['sku'] = '';
    	}

		if (isset($this->request->post['location'])) {
      		$this->data['location'] = $this->request->post['location'];
    	} elseif (isset($package_info)) {
			$this->data['location'] = $package_info['location'];
		}else{
      		$this->data['location'] = '';
    	}

		$this->load->model('setting/store');

		$this->data['stores'] = $this->model_setting_store->getStores();

		if (isset($this->request->post['package_store'])) {
			$this->data['package_store'] = $this->request->post['package_store'];
		} elseif (isset($package_info)) {
			$this->data['package_store'] = $this->model_material_lookup->getPackageStores($this->request->get['id']);
		}else{
			$this->data['package_store'] = array(0);
		}

		if (isset($this->request->post['keyword'])) {
			$this->data['keyword'] = $this->request->post['keyword'];
		} elseif (isset($package_info)) {
			$this->data['keyword'] = $package_info['keyword'];
		}else{
			$this->data['keyword'] = '';
		}

		if (isset($this->request->post['package_tags'])) {
			$this->data['package_tags'] = $this->request->post['package_tags'];
		} elseif (isset($package_info)) {
			$this->data['package_tags'] = $this->model_material_lookup->getPackageTags($this->request->get['id']);
		}else{
			$this->data['package_tags'] = array();
		}

		if (isset($this->request->post['image'])) {
			$this->data['image'] = $this->request->post['image'];
		} elseif (isset($package_info)) {
			$this->data['image'] = $package_info['image'];
		}else{
			$this->data['image'] = '';
		}

		$this->load->model('tool/image');

		if (isset($package_info) && $package_info['image'] && file_exists(DIR_IMAGE . $package_info['image'])) {
			$this->data['preview'] = $this->model_tool_image->resize($package_info['image'], 100, 100);
		}else{
			$this->data['preview'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);
		}

		$this->load->model('catalog/manufacturer');

    	$this->data['manufacturers'] = $this->model_catalog_manufacturer->getManufacturers();

    	if (isset($this->request->post['manufacturer_id'])) {
      		$this->data['manufacturer_id'] = $this->request->post['manufacturer_id'];
		} elseif (isset($package_info)) {
			$this->data['manufacturer_id'] = $package_info['manufacturer_id'];
		}else{
      		$this->data['manufacturer_id'] = 0;
    	}

    	if (isset($this->request->post['shipping'])) {
      		$this->data['shipping'] = $this->request->post['shipping'];
    	} elseif (isset($package_info)) {
      		$this->data['shipping'] = $package_info['shipping'];
    	}else{
			$this->data['shipping'] = 1;
		}

		if (isset($this->request->post['date_available'])) {
       		$this->data['date_available'] = $this->request->post['date_available'];
		} elseif (isset($package_info)) {
			$this->data['date_available'] = date('Y-m-d', strtotime($package_info['date_available']));
		}else{
			$this->data['date_available'] = date('Y-m-d', time()-86400);
		}

    	if (isset($this->request->post['quantity'])) {
      		$this->data['quantity'] = $this->request->post['quantity'];
    	} elseif (isset($package_info)) {
      		$this->data['quantity'] = $package_info['quantity'];
    	}else{
			$this->data['quantity'] = 1;
		}

		if (isset($this->request->post['minimum'])) {
      		$this->data['minimum'] = $this->request->post['minimum'];
    	} elseif (isset($package_info)) {
      		$this->data['minimum'] = $package_info['minimum'];
    	}else{
			$this->data['minimum'] = 1;
		}

		if (isset($this->request->post['subtract'])) {
      		$this->data['subtract'] = $this->request->post['subtract'];
    	} elseif (isset($package_info)) {
      		$this->data['subtract'] = $package_info['subtract'];
    	}else{
			$this->data['subtract'] = 1;
		}

		if (isset($this->request->post['sort_order'])) {
      		$this->data['sort_order'] = $this->request->post['sort_order'];
    	} elseif (isset($package_info)) {
      		$this->data['sort_order'] = $package_info['sort_order'];
    	}else{
			$this->data['sort_order'] = 1;
		}

		$this->load->model('localisation/stock_status');

		$this->data['stock_statuses'] = $this->model_localisation_stock_status->getStockStatuses();

		if (isset($this->request->post['stock_status_id'])) {
      		$this->data['stock_status_id'] = $this->request->post['stock_status_id'];
    	} else if (isset($package_info)) {
      		$this->data['stock_status_id'] = $package_info['stock_status_id'];
    	}else{
			$this->data['stock_status_id'] = $this->config->get('config_stock_status_id');
		}

    	if (isset($this->request->post['price'])) {
      		$this->data['price'] = $this->request->post['price'];
    	} else if (isset($package_info)) {
			$this->data['price'] = $package_info['price'];
		}else{
      		$this->data['price'] = '';
    	}

		if (isset($this->request->post['cost'])) {
      		$this->data['cost'] = $this->request->post['cost'];
    	} else if (isset($package_info)) {
			$this->data['cost'] = $package_info['cost'];
		}else{
      		$this->data['cost'] = '';
    	}

    	if (isset($this->request->post['status'])) {
      		$this->data['status'] = $this->request->post['status'];
    	} else if (isset($package_info)) {
			$this->data['status'] = $package_info['status'];
		}else{
      		$this->data['status'] = 1;
    	}

		$this->load->model('localisation/tax_class');

		$this->data['tax_classes'] = $this->model_localisation_tax_class->getTaxClasses();

		if (isset($this->request->post['tax_class_id'])) {
      		$this->data['tax_class_id'] = $this->request->post['tax_class_id'];
    	} else if (isset($package_info)) {
			$this->data['tax_class_id'] = $package_info['tax_class_id'];
		}else{
      		$this->data['tax_class_id'] = 0;
    	}

    	if (isset($this->request->post['weight'])) {
      		$this->data['weight'] = $this->request->post['weight'];
		} else if (isset($package_info)) {
			$this->data['weight'] = $package_info['weight'];
    	}else{
      		$this->data['weight'] = '';
    	}

		$this->load->model('localisation/weight_class');

		$this->data['weight_classes'] = $this->model_localisation_weight_class->getWeightClasses();

    	$weight_info = $this->model_localisation_weight_class->getWeightClassDescriptionByUnit($this->config->get('config_weight_class'));

		if (isset($this->request->post['weight_class_id'])) {
      		$this->data['weight_class_id'] = $this->request->post['weight_class_id'];
    	} elseif (isset($package_info)) {
      		$this->data['weight_class_id'] = $package_info['weight_class_id'];
    	} elseif (isset($weight_info)) {
      		$this->data['weight_class_id'] = $weight_info['weight_class_id'];
		}else{
      		$this->data['weight_class_id'] = '';
    	}

		if (isset($this->request->post['length'])) {
      		$this->data['length'] = $this->request->post['length'];
    	} elseif (isset($package_info)) {
			$this->data['length'] = $package_info['length'];
		}else{
      		$this->data['length'] = '';
    	}

		if (isset($this->request->post['width'])) {
      		$this->data['width'] = $this->request->post['width'];
		} elseif (isset($package_info)) {
			$this->data['width'] = $package_info['width'];
    	}else{
      		$this->data['width'] = '';
    	}

		if (isset($this->request->post['height'])) {
      		$this->data['height'] = $this->request->post['height'];
		} elseif (isset($package_info)) {
			$this->data['height'] = $package_info['height'];
    	}else{
      		$this->data['height'] = '';
    	}

		$this->load->model('localisation/length_class');

		$this->data['length_classes'] = $this->model_localisation_length_class->getLengthClasses();

    	$length_info = $this->model_localisation_length_class->getLengthClassDescriptionByUnit($this->config->get('config_length_class'));

		if (isset($this->request->post['length_class_id'])) {
      		$this->data['length_class_id'] = $this->request->post['length_class_id'];
    	} elseif (isset($package_info)) {
      		$this->data['length_class_id'] = $package_info['length_class_id'];
    	} elseif (isset($length_info)) {
      		$this->data['length_class_id'] = $length_info['length_class_id'];
    	}else{
    		$this->data['length_class_id'] = '';
		}

		$this->data['language_id'] = $this->config->get('config_language_id');

		if (isset($this->request->post['package_option'])) {
			$this->data['package_options'] = $this->request->post['package_option'];
		} elseif (isset($package_info)) {
			$this->data['package_options'] = $this->model_material_lookup->getPackageOptions($this->request->get['id']);
		}else{
			$this->data['package_options'] = array();
		}

		$this->load->model('sale/customer_group');

		$this->data['customer_groups'] = $this->model_sale_customer_group->getCustomerGroups();

		if (isset($this->request->post['package_discount'])) {
			$this->data['package_discounts'] = $this->request->post['package_discount'];
		} elseif (isset($package_info)) {
			$this->data['package_discounts'] = $this->model_material_lookup->getPackageDiscounts($this->request->get['id']);
		}else{
			$this->data['package_discounts'] = array();
		}

		$this->data['no_image'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);

		$this->data['package_images'] = array();

		if (isset($package_info)) {
			$results = $this->model_material_lookup->getPackageImages($this->request->get['id']);

			foreach ($results as $result) {
				if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {
					$this->data['package_images'][] = array(
						'preview' => $this->model_tool_image->resize($result['image'], 100, 100),
						'file'    => $result['image']
					);
				}else{
					$this->data['package_images'][] = array(
						'preview' => $this->model_tool_image->resize('no_image.jpg', 100, 100),
						'file'    => $result['image']
					);
				}
			}
		}

		$this->load->model('catalog/download');

		$this->data['downloads'] = $this->model_catalog_download->getDownloads();

		if (isset($this->request->post['package_download'])) {
			$this->data['package_download'] = $this->request->post['package_download'];
		} elseif (isset($package_info)) {
			$this->data['package_download'] = $this->model_material_lookup->getPackageDownloads($this->request->get['id']);
		}else{
			$this->data['package_download'] = array();
		}

		$this->load->model('catalog/category');

		$this->data['categories'] = $this->model_catalog_category->getCategories(0);

		if (isset($this->request->post['package_category'])) {
			$this->data['package_category'] = $this->request->post['package_category'];
		} elseif (isset($package_info)) {
			$this->data['package_category'] = $this->model_material_lookup->getPackageCategories($this->request->get['id']);
		}else{
			$this->data['package_category'] = array();
		}

 		if (isset($this->request->post['package_related'])) {
			$this->data['package_related'] = $this->request->post['package_related'];
		} elseif (isset($package_info)) {
			$this->data['package_related'] = $this->model_material_lookup->getPackageRelated($this->request->get['id']);
		}else{
			$this->data['package_related'] = array();
		}

		$this->template = 'material/lookup_form.tpl';
		$this->children = array(
			'common/header',
			'common/footer'
		);

		$this->response->setOutput($this->render(TRUE), $this->config->get('config_compression'));
  	}

  	private function validateForm() {
    	if (!$this->user->hasPermission('modify', 'material/lookup')) {
      		$this->error['warning'] = $this->language->get('error_permission');
    	}

    	foreach ($this->request->post['package_description'] as $language_id => $value) {
      		if ((strlen(utf8_decode($value['name'])) < 1) || (strlen(utf8_decode($value['name'])) > 255)) {
        		$this->error['name'][$language_id] = $this->language->get('error_name');
      		}
    	}

    	if ((strlen(utf8_decode($this->request->post['model'])) < 1) || (strlen(utf8_decode($this->request->post['model'])) > 64)) {
      		$this->error['model'] = $this->language->get('error_model');
    	}

    	if (!$this->error) {
			return TRUE;
    	}else{
			if (!isset($this->error['warning'])) {
				$this->error['warning'] = $this->language->get('error_required_data');
			}
      		return FALSE;
    	}
  	}

  	private function validateDelete() {
    	if (!$this->user->hasPermission('modify', 'material/lookup')) {
      		$this->error['warning'] = $this->language->get('error_permission');
    	}

		if (!$this->error) {
	  		return TRUE;
		}else{
	  		return FALSE;
		}
  	}

  	private function validateCopy() {
    	if (!$this->user->hasPermission('modify', 'material/lookup')) {
      		$this->error['warning'] = $this->language->get('error_permission');
    	}

		if (!$this->error) {
	  		return TRUE;
		}else{
	  		return FALSE;
		}
  	}

	public function category() {
		$this->load->model('material/lookup');

		if (isset($this->request->get['category_id'])) {
			$category_id = $this->request->get['category_id'];
		}else{
			$category_id = 0;
		}

		$package_data = array();

		$results = $this->model_material_lookup->getPackagesByCategoryId($category_id);

		foreach ($results as $result) {
			$package_data[] = array(
				'id' => $result['id'],
				'name'       => $result['name'],
				'model'      => $result['model']
			);
		}

		$this->load->library('json');

		$this->response->setOutput(Json::encode($package_data));
	}

	public function related() {
		$this->load->model('material/lookup');

		if (isset($this->request->post['package_related'])) {
			$packages = $this->request->post['package_related'];
		}else{
			$packages = array();
		}

		$package_data = array();

		foreach ($packages as $id) {
			$package_info = $this->model_material_lookup->getPackage($id);

			if ($package_info) {
				$package_data[] = array(
					'id' => $package_info['id'],
					'name'       => $package_info['name'],
					'model'      => $package_info['model']
				);
			}
		}

		$this->load->library('json');

		$this->response->setOutput(Json::encode($package_data));
	}
}
?>